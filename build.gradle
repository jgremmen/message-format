plugins {
  id 'base'
  id 'java-library'
  id 'maven-publish'
//  id 'nebula.optional-base' version '5.0.3'
  id 'jacoco'
  id 'signing'
}


description = 'Message Format Library'


allprojects {
  buildDir = ".build"

  apply plugin: "base"
  apply plugin: "java-library"

  group = "de.sayayi.lib"
  version = "0.4.0"

  ext.lombokVersion = "1.18.12"
  ext.antlrVersion = "4.5.3"  // last java 6 version
  ext.junitVersion = "4.12"
  ext.jodatimeVersion = "2.10.5"
  ext.jetbrainsAnnotationsVersion = "13.0"

  repositories {
    jcenter();
  }

  dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

    testImplementation "junit:junit:${junitVersion}"
    testCompileOnly "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"
  }

  compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }
}


dependencies {
  api project(':core')
  api project('formatters-jdk8')

  implementation "joda-time:joda-time:${jodatimeVersion}"
}


compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


apply from: file('gradle/javadoc.gradle')
apply from: file('gradle/quality.gradle')
apply from: file('gradle/publishing.gradle')


jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  from project(':core').sourceSets.main.output
  from project(':formatters-jdk8').sourceSets.main.output

  reproducibleFileOrder = true

  manifest {
    attributes['Implementation-Vendor'] = "Jeroen Gremmen"
    attributes['Implementation-Vendor-Id'] = "de.sayayi"
    attributes['Implementation-Title'] = "Message Formatting Library"
    attributes['Implementation-Version'] = "${project.version}"
  }
}


clean {
  subprojects.each {
    it.afterEvaluate {
      def cleanTask = it.tasks.findByName('clean')
      if (cleanTask) {
        dependsOn(cleanTask)
      }
    }
  }
}

