plugins {
  id 'idea'
  id 'java-library'
}


description = "Message Format Library"
group = "de.sayayi.lib"
version = "0.1.0"


sourceSets {
  java6
  java8
  main {
    resources {
      srcDir 'src/java6/resources'
      srcDir 'src/java8/resources'
    }
  }
}


compileJava6Java {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


compileJava8Java {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}


compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


repositories {
  jcenter()
}


dependencies {
  annotationProcessor "org.projectlombok:lombok:1.18.8"

  api 'org.projectlombok:lombok:1.18.8'

  java6AnnotationProcessor "org.projectlombok:lombok:1.18.8"
  java6Implementation 'org.projectlombok:lombok:1.18.8'
  java6Implementation 'joda-time:joda-time:2.10.1'

  java8Implementation files(sourceSets.java6.output.classesDirs) {
    builtBy compileJava6Java
  }

  implementation files(sourceSets.java8.output.classesDirs) {
    builtBy compileJava8Java
  }

  implementation files(sourceSets.java6.output.classesDirs) {
    builtBy compileJava6Java
  }

  testImplementation 'junit:junit:4.12'
  testImplementation 'joda-time:joda-time:2.10.1'
}


jar {
  from sourceSets.java6.output
  from sourceSets.java8.output

  reproducibleFileOrder true
}


javadoc {
  classpath += sourceSets.java6.compileClasspath
  classpath += sourceSets.java8.compileClasspath
  source += sourceSets.java6.allJava
  source += sourceSets.java8.allJava

  failOnError false
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}


task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.java6.allSource
  from sourceSets.java8.allSource
  from sourceSets.main.allSource
}


artifacts {
  archives sourcesJar
  archives javadocJar
}
