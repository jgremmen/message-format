/*
 * Copyright 2020 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Message Format Library Projects'


def gradleDirectory = layout.projectDirectory.dir('gradle')
def snapshot = version.toString().endsWith('-SNAPSHOT')


allprojects {
  group = 'de.sayayi.lib'
  version = libs.versions.message.format.get()

  layout.buildDirectory = '.build'

  apply plugin: 'base'
  apply from: gradleDirectory.file('repositories.gradle')
}


configure(subprojects.findAll {name.startsWith('message-') }) {
  apply from: gradleDirectory.file('java-library.gradle')
  apply from: gradleDirectory.file('javadoc.gradle')
  apply from: gradleDirectory.file('publish.gradle')
}


tasks.register('releaseAllDryRun', Sync) {
  group = 'release'
  description = 'Release all artifacts to temporary Maven repository.'

  into rootProject.layout.buildDirectory.dir('repository')

  configure(subprojects) { subproject ->
    def publishTask = subproject.tasks.named('publishToProjectLocalRepository')
    if (publishTask != null)
      from publishTask
  }
}


tasks.register(snapshot ? 'releaseAllSnapshots' : 'releaseAll') {
  group = 'release'
  description = snapshot
      ? 'Release all snapshot artifacts to Maven Central Repository.'
      : 'Release final artifacts to Maven Central repository.'
}


/*
tasks.register('releaseAll') {
  group = 'release'
  description = 'Release all publications to Maven and Gradle Plugin repository.'

  dependsOn ':message-format:publishMsgformatPublicationToMavenCentralRepository'
  dependsOn ':message-format-annotations:publishAnnotationsPublicationToMavenCentralRepository'
  dependsOn ':message-format-asm:publishAsmPublicationToMavenCentralRepository'
  dependsOn ':message-format-spring:publishSpringPublicationToMavenCentralRepository'

  dependsOn ':message-gradle-plugin:publishGradlePluginPublicationToMavenCentralRepository'
  dependsOn ':message-gradle-plugin:publishPlugins'
}
*/


clean {
  delete layout.projectDirectory.dir('build')
}


wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
