/*
 * Copyright 2020 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Message Format Library Projects'


allprojects {
  layout.buildDirectory = '.build'

  apply plugin: 'base'

  group = 'de.sayayi.lib'
  version = '0.11.1-SNAPSHOT'

  ext.jetbrainsAnnotationsVersion = '[24.0,26.1)'
  ext.junitVersion = '5.11.+'
  ext.lombokVersion = '1.18.+'
  ext.mockitoVersion = '5.14.+'

  repositories {
    maven {
      url 'https://oss.sonatype.org/content/repositories/snapshots/'
      mavenContent {
        includeGroup 'de.sayayi.lib'
        snapshotsOnly()
      }
    }

    mavenCentral()
  }
}


configure(subprojects.findAll { it.name.startsWith('message-format') }) {
  apply from: "${rootDir}/gradle/module.gradle"
}


configure(subprojects.findAll { it.name != 'documentation' }) {
  apply from: "${rootDir}/gradle/java.gradle"
  apply from: "${rootDir}/gradle/publish.gradle"
}


tasks.register('releaseAll') {
  group = 'release'
  description = 'Release all publications to Maven and Gradle Plugin repository.'

  dependsOn ':message-format:publishMsgformatPublicationToMavenCentralRepository'
  dependsOn ':message-format-jodatime:publishJodatimePublicationToMavenCentralRepository'
  dependsOn ':message-format-spring:publishSpringPublicationToMavenCentralRepository'

  dependsOn ':message-gradle-plugin:publishGradlePluginPublicationToMavenCentralRepository'
  dependsOn ':message-gradle-plugin:publishPlugins'
}


tasks.register('releaseAllTemp') {
  group = 'release'
  description = 'Release all publications to temporary Maven repository.'

  dependsOn ':message-format:publishMsgformatPublicationToMavenTempRepository'
  dependsOn ':message-format-jodatime:publishJodatimePublicationToMavenTempRepository'
  dependsOn ':message-format-spring:publishSpringPublicationToMavenTempRepository'

  dependsOn ':message-gradle-plugin:publishGradlePluginPublicationToMavenTempRepository'
  dependsOn ':message-gradle-plugin:publishMessageFormatPluginMarkerMavenPublicationToMavenTempRepository'
}
