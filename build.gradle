plugins {
  id 'idea'
  id 'java-library'
  id 'antlr'
  id 'maven-publish'
  id 'nebula.optional-base' version '5.0.3'
  id 'jacoco'
  id 'signing'
}

description 'Message Format Library'
group 'de.sayayi.lib'
version '0.4.0'


configurations {
  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}


sourceSets {
  java6 {
    antlr {
      srcDirs = [ 'src/java6/antlr' ]
    }
    java {
      srcDirs = [ 'src/java6/java', 'src-generated' ]
    }
  }
  java8
  main {
    resources {
      srcDir 'src/java6/resources'
      srcDir 'src/java8/resources'
    }
  }
}


apply from: file('gradle/versions.gradle')
apply from: file('gradle/javadoc.gradle')
apply from: file('gradle/quality.gradle')
apply from: file('gradle/publishing.gradle')


compileJava6Java {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


compileJava8Java {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}


compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


repositories {
  jcenter()
  mavenCentral()
}


dependencies {
  annotationProcessor "org.projectlombok:lombok:"
  java6AnnotationProcessor "org.projectlombok:lombok:"

  compileOnly 'org.projectlombok:lombok:'
  compileOnly 'org.jetbrains:annotations:'

  java6CompileOnly 'org.projectlombok:lombok:'
  java6CompileOnly 'org.jetbrains:annotations:'

  java6Implementation 'joda-time:joda-time:'
  java6Implementation 'org.antlr:antlr4-runtime:4.3'

  java8CompileOnly 'org.jetbrains:annotations:'

  java8Implementation files(sourceSets.java6.output.classesDirs) {
    builtBy compileJava6Java
  }

  implementation files(sourceSets.java8.output.classesDirs) {
    builtBy compileJava8Java
  }

  implementation files(sourceSets.java6.output.classesDirs) {
    builtBy compileJava6Java
  }

  testImplementation 'junit:junit:'
  testImplementation 'joda-time:joda-time:'
  testCompileOnly 'org.jetbrains:annotations:'

  antlr "org.antlr:antlr4:4.3"
}


compileJava6Java.dependsOn generateJava6GrammarSource


generateJava6GrammarSource {
  outputDirectory = file("src-generated")
  arguments << "-lib" << "src/java6/antlr/de/sayayi/lib/message/parser"
}



//generateJava6GrammarSource.doLast {
//  FileTree ioTree = fileTree(dir: "src-generated", include: "**/*.java")
//  ioTree.each { f ->
//    ant.replaceregexp(file: f, match: "org\\.antlr\\.(.*)", replace: "de.sayayi.lib.message.antlr.\\1", byline: true)
//  }
//}


jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  from sourceSets.java6.output
  from sourceSets.java8.output

  reproducibleFileOrder = true

  manifest {
    attributes['Implementation-Vendor'] = "Jeroen Gremmen"
    attributes['Implementation-Vendor-Id'] = "de.sayayi"
    attributes['Implementation-Title'] = "Message Formatting Library"
    attributes['Implementation-Version'] = "${project.version}"
  }
}


idea {
  module {
    sourceDirs += file("src/java6/antlr")
  }
}
