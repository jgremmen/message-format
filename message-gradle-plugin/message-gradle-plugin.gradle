/*
 * Copyright 2023 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish' version '1.2.0'
}


description = 'Message Format Gradle Plugin'


def asmVersion = "[9.0,)"


dependencies {
  api gradleApi()

  implementation project(":message-format")
  implementation "org.ow2.asm:asm:${asmVersion}"
}


javadoc {
  title "${project.description} ${version}"

  (options as StandardJavadocDocletOptions).with {
    linksOffline(
        "https://javadoc.io/doc/org.jetbrains/annotations-java5/${jetbrainsAnnotationsVersion}/",
        "${rootDir}/gradle/javadocs/jetbrains-annotations")

    encoding 'UTF-8'

    group("Gradle Plugin", [ "de.sayayi.plugin.gradle.message" ])

    noQualifiers 'java.util', 'java.lang'
  }

  failOnError false
}


jar {
  archiveBaseName = 'message-format-gradle-plugin'
}


gradlePlugin {
  website = 'https://github.com/jgremmen/message-format'
  vcsUrl = 'https://github.com/jgremmen/message-format'

  plugins {
    messageFormat {
      id = 'de.sayayi.plugin.gradle.message'
      displayName = 'Message Format Gradle Plugin'
      description = 'Gradle Plugin to scan the class path, pre-compile and pack message and ' +
                    'template formats into a single file.'
      implementationClass = 'de.sayayi.plugin.gradle.message.MessageFormatPlugin'
      tags.set(['sayayi', 'message-format', 'scan', 'pre-compile'])
    }
  }
}


publishing {
  publications {
    gradlePlugin(MavenPublication) {
      from components.java

      pom {
        name = 'Java Message Format Gradle Plugin'
        description = 'Gradle Plugin'
        url = 'https://github.com/jgremmen/message-format'
        inceptionYear = '2023'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }

        scm {
          connection = 'scm:git:git://github.com/jgremmen/message-format.git'
          developerConnection = 'scm:git:git://github.com/jgremmen/message-format.git'
          url = 'https://github.com/jgremmen/message-format'
        }
      }
    }
  }
}


signing {
  sign publishing.publications.gradlePlugin
}


publishGradlePluginPublicationToMavenTempRepository.configure {
  dependsOn 'signGradlePluginPublication'
  dependsOn 'signPluginMavenPublication'
}


publishGradlePluginPublicationToMavenCentralRepository.configure {
  dependsOn 'signPluginMavenPublication'
}


afterEvaluate {
  publishPluginMavenPublicationToMavenTempRepository.configure {
    dependsOn 'signGradlePluginPublication'
  }
}
