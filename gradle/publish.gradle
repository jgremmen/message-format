/*
 * Copyright 2023 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'signing'
apply plugin: 'org.danilopianini.publish-on-central'


ext.snapshot = version.toString().endsWith('-SNAPSHOT')


zipMavenCentralPortalPublication.dependsOn publishOSSRHPublicationToProjectLocalRepository


if (snapshot)
{
  publishing {
    repositories {
      maven {
        name = 'mavenCentralSnapshot'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'

        credentials {
          username = rootProject.findProperty('mavenCentral.username')
          password = rootProject.findProperty('mavenCentral.password')
        }
      }
    }
  }
}


publishOnCentral {
  repoOwner = 'jgremmen'
  projectLongName = "${description}"
  projectDescription = 'Highly configurable message format library supporting message definition through annotations'
  licenseName = 'Apache License, Version 2.0'
  licenseUrl = 'https://www.apache.org/licenses/LICENSE-2.0'
}


tasks.register('publishToProjectLocalRepository') {
  group = PublishingPlugin.PUBLISH_TASK_GROUP
  description = 'Create a local repository with releasable artifacts.'

  dependsOn publishOSSRHPublicationToProjectLocalRepository

  outputs.dir layout.buildDirectory.dir('project-local-repository')
}


ext.releaseTask = tasks.register(GUtil.toLowerCamelCase("release-${project.name}-artifacts")) {
  group = 'release'
  description = "Release ${project.name} ${snapshot ? 'snapshot ' : ''}artifacts to Maven Central Repository."

  dependsOn 'publishToProjectLocalRepository'
}
