/*
 * Copyright 2023 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//file:noinspection DependencyNotationArgument
//file:noinspection GroovyAssignabilityCheck


description = 'Message Format Library (Spring adopter and formatter)'


dependencies {
  implementation project(':message-format')
  implementation project(':message-format-annotations')

  implementation libs.spring.context

  //noinspection DependencyNotationArgument
  testImplementation project(':message-format').sourceSets.test.output
}


javadoc {
  (options as StandardJavadocDocletOptions).with {
    group('Adopters', [
        'de.sayayi.lib.message.spring.adopter',
    ])
    group('Formatters', [
        'de.sayayi.lib.message.spring.formatter'
    ])

    linksOffline(
        "https://javadoc.io/doc/de.sayayi.lib/message-format/${rootProject.version}/",
        "${rootDir}/gradle/javadocs/message-format")
    linksOffline(
        "https://javadoc.io/doc/org.jetbrains/annotations/${resolveVersion('annotations')}/",
        "${rootDir}/gradle/javadocs/jetbrains-annotations")
    linksOffline(
        "https://javadoc.io/doc/org.springframework/spring-core/${resolveVersion('spring-core')}/",
        "${rootDir}/gradle/javadocs/spring-core")
    linksOffline(
        "https://javadoc.io/doc/org.springframework/spring-context/${resolveVersion('spring-context')}/",
        "${rootDir}/gradle/javadocs/spring-context")
    linksOffline(
        "https://javadoc.io/doc/org.springframework/spring-expression/${resolveVersion('spring-expression')}/",
        "${rootDir}/gradle/javadocs/spring-expression")
  }
}


publishing {
  publications {

    spring(MavenPublication) {
      from components.java

      pom {
        inceptionYear = '2023'

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }
      }
    }
  }
}


signing {
  sign publishing.publications.spring
}
