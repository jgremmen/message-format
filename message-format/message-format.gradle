/*
 * Copyright 2020 Jeroen Gremmen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'antlr'
  id 'idea'
  id 'com.github.johnrengelman.shadow' version '6.1.0'
}

description = 'Message Format Library'


configurations {
  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}


def antlrVersion = "4.9.2"


dependencies {
  implementation "org.antlr:antlr4-runtime:${antlrVersion}"

  antlr "org.antlr:antlr4:${antlrVersion}"
}


generateGrammarSource {
  outputDirectory = file("${buildDir}/generated-src/antlr/main/de/sayayi/lib/message/parser")
  arguments += [ '-package', 'de.sayayi.lib.message.parser' ]

  exclude "**/MessageParserTest.g4"
}


compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}


compileJava.dependsOn generateGrammarSource


sourcesJar {
  dependsOn generateGrammarSource

  exclude "**/*.tokens"
  exclude "**/*.g4"
}


jar {
  manifest {
    attributes['Implementation-Title'] = "${project.description}"
  }
}


shadowJar {
  group 'build'

  archiveAppendix.set('nodep')
  archiveClassifier.set(null)  // set by shadowJar but interferes with publishing

  exclude 'META-INF/maven/**'
  exclude "org/antlr/v4/runtime/atn/ATNSerializer*"
  exclude "org/antlr/v4/runtime/ParserInterpreter*"
  exclude "org/antlr/v4/runtime/TokenStreamRewriter*"
  exclude "org/antlr/v4/runtime/tree/pattern/**"
  exclude "org/antlr/v4/runtime/tree/Trees"
  exclude "org/antlr/v4/runtime/tree/xpath/**"
  exclude "org/antlr/v4/runtime/Unbuffered*"

  minimize()

  relocate 'org.antlr.v4.runtime', 'de.sayayi.lib.message.antlr'

  manifest {
    attributes['Implementation-Title'] = "${project.description} (no dependencies)"
  }
}


import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task testShadowJar(type: ShadowJar) {
  dependsOn compileTestJava

  archiveAppendix.set('test')

  from sourceSets.test.output
  configurations = [project.configurations.testRuntimeOnly]

  relocate 'org.antlr.v4.runtime', 'de.sayayi.lib.message.antlr'
}


test {
  dependsOn jar

  doFirst {
    classpath = jar.outputs.files + classpath
    classpath -= compileJava.outputs.files + processResources.outputs.files
  }
}


task shadowTest(type: Test, group: 'verification') {
  dependsOn shadowJar, testShadowJar

  doFirst {
    classpath = shadowJar.outputs.files + testShadowJar.outputs.files + classpath -
        compileJava.outputs.files - compileTestJava.outputs.files
  }
}


assemble.dependsOn shadowJar
build.dependsOn shadowTest


publishing {
  publications {

    dep(MavenPublication) {
      artifactId 'message-format'

      from components.java

      versionMapping {
        usage('java-runtime') {
          fromResolutionResult()
        }
      }

      pom {
        name = 'Java Message Format Library'
        description = 'Highly configurable message format library supporting message definition through annotations'
        url = 'https://github.com/jgremmen/message-format'
        inceptionYear = '2019'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }

        scm {
          connection = 'scm:git:git://github.com/jgremmen/message-format.git'
          developerConnection = 'scm:git:git://github.com/jgremmen/message-format.git'
          url = 'https://github.com/jgremmen/message-format'
        }
      }
    }


    noDep(MavenPublication) { publication ->
      artifactId 'message-format-nodep'

      from project.shadow.component(publication)
      artifact javadocJar
      artifact sourcesJar

      pom {
        name = 'Java Message Format Library (no dependencies)'
        description = 'Highly configurable message format library supporting message definition through annotations'
        url = 'https://github.com/jgremmen/message-format'
        inceptionYear = '2019'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'jgremmen'
            name = 'Jeroen Gremmen'
            email = 'jeroen.gremmen@sayayi.de'
          }
        }

        scm {
          connection = 'scm:git:git://github.com/jgremmen/message-format.git'
          developerConnection = 'scm:git:git://github.com/jgremmen/message-format.git'
          url = 'https://github.com/jgremmen/message-format'
        }
      }
    }
  }
}


signing {
  sign publishing.publications.dep
  sign publishing.publications.noDep
}


clean.doLast {
  fileTree("${projectDir}/src/main").matching {
    include "antlr/*.tokens"
  }.files.forEach({ it.delete() })
}


idea {
  module {
    resourceDirs += file("src/main/antlr")
  }
}
